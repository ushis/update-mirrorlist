#!/bin/bash

VERSION='1.0.5'
PROTOCOL=('http' 'https')
IPV=(4)
USE_STATUS=true
MAX=0
COUNTRIES=()
PACSERVE=''

. /etc/pacman.d/update-mirrorlist.conf

if [ $COLOR ]; then
    # colors:
    WHITE="\033[38;1m"
    GREEN="\033[32;1m"
    BLUE="\033[34;1m"
    RED="\033[31;1m"
    CLOSE="\033[0m"

    # prefixes:
    WORK=$BLUE"::"$CLOSE
    INFO=$GREEN" >"$CLOSE
    ARROW=$BLUE"->"$CLOSE
    ERROR=$RED" >"$CLOSE
fi

log() {
    if [ $COLOR ]; then
	echo -e $WORK $WHITE"$1"$CLOSE ;
    else
	echo "$1"
    fi
    echo `date +'[%Y-%m-%d %H:%M]'` "$1" >> /var/log/pacman.log
}

error() {
    if [ $COLOR ]; then
	echo -e $ERROR $WHITE"$1"$CLOSE ;
    else
	echo "$1"
    fi
    echo `date +'[%Y-%m-%d %H:%M]'` "$1" >> /var/log/pacman.log
}

test_root() {
	if [ $EUID -ne 0 ]; then
		echo "Only root can update the mirrorlist"
		exit 1
	fi
}

usage() {
	echo "Usage: ${0} [options]"
	echo ''
	echo 'Update options:'
	echo '  -m <num>   Set max number of mirrors'
	echo ''
	echo 'Other options:'
	echo '  -h  Show this help'
	echo '  -v  Show version and exit'
	echo '  -r  Restore original mirrorlist'
	echo '  -c  Check mirrorlist for errors'
	echo ''
	echo 'update-mirrorlist updates the pacman mirrorlist by retrieving'
	echo 'a fresh list from http://www.archlinux.org/mirrorlist/'
	echo ''
	echo 'See /etc/pacman.d/update-mirrorlist.conf for configuration'
}

check() {
	# Test for invalid lines
	if [ -n "$(egrep -v '^#|^[[:blank:]]*$|^Server = (http|https)://' "$1")" ]; then
		return 0
	fi

	# Check if there is at least one mirror
	if [ -z "$(egrep '^Server = (http|ftp)://' "$1")" ]; then
		return 0
	fi

	return 1
}

restore() {
	log 'Restoring original mirrorlist'

	if [ ! -f /etc/pacman.d/mirrorlist.original ]; then
		log 'File does not exist: /etc/pacman.d/mirrorlist.original'
		exit 1
	fi

	check /etc/pacman.d/mirrorlist.original

	if [ $? -ne 1 ]; then
		log 'Original mirrorlist seems to be corrupted.'
		exit 1
	fi

	mv /etc/pacman.d/mirrorlist.original /etc/pacman.d/mirrorlist
	log 'Restored original mirrorlist'
	exit 0
}

check_curlist() {
	check /etc/pacman.d/mirrorlist

	if [ $? -eq 1 ]; then
		echo 'No errors found.'
	else
		echo 'WARNING: The mirrorlist seems to be corrupted!'
		echo ''
		echo 'Try:'
		echo "  ${0}     to retrieve a new list from the server"
		echo "  ${0} -r  to restore the original mirrorlist"
	fi

	exit 0
}

set_max() {
	if ! [[ "$1" =~ ^[0-9]+$ ]]; then
		echo "Given value is not a number: $1"
		exit 1
	fi

	MAX=$1
}

while getopts 'm:ovhrc' opt; do
	case ${opt} in
		m) set_max $OPTARG;;
		v) echo "update-mirrorlist, version ${VERSION}"; exit 0;;
		r) test_root; restore;;
		c) check_curlist;;
		*) usage; exit 0;;
	esac
done

test_root
uri='https://www.archlinux.org/mirrorlist/?'

if $USE_STATUS; then
	uri+='use_mirror_status=on&'
fi

for x in "${PROTOCOL[@]}"; do
	uri+="protocol=${x}&"
done

for x in "${IPV[@]}"; do
	uri+="ip_version=${x}&"
done

for x in "${COUNTRIES[@]}"; do
	uri+="country=${x}&"
done

if [ ! -e /etc/pacman.d/mirrorlist.original ]; then
	log 'Backing up original mirrorlist'
	cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.original
fi

log 'Updating mirrorlist'

tmpfile=$(mktemp --tmpdir mirrorlist-XXXXXXXXXXXX)

if [ ! "`ping -c 1 archlinux.org`" ]; then
	error 'Error: Could not reach host: archlinux.org'
	exit 1
fi

curl -s "$uri" | sed 's/^#Server/Server/g' > "$tmpfile"
check "$tmpfile"

if [ $? -ne 1 ]; then
	error 'Retrieved mirrorlist seems to be corrupted.'
	exit 1
fi

if [ $MAX -gt 0 ]; then
	egrep -m $MAX '^Server = (http|ftp)://' "$tmpfile" > /etc/pacman.d/mirrorlist
else
	mv "$tmpfile" /etc/pacman.d/mirrorlist
fi

if [ -n "$PACSERVE" -a -f /usr/bin/pacserve ]; then
	sed "1 i## Pacserve repository\nServer=$PACSERVE\n" -i /etc/pacman.d/mirrorlist
fi

chmod 644 /etc/pacman.d/mirrorlist
log 'Updated mirrorlist'

exit 0
